# -*- coding: utf-8 -*-
"""Tempos_medios_OuvidorSUS_20250924.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F2d2lNa9exs_xvVz5dwMRP1bH3NlvtHf
"""

## DB_1
import pandas as pd
import unicodedata
from IPython.display import display

# --- FunÃ§Ãµes auxiliares ---
def padronizar_colunas(df):
    df.columns = (
        df.columns.str.strip()
                  .str.upper()
                  .str.normalize("NFKD")
                  .str.encode("ascii", errors="ignore")
                  .str.decode("utf-8")
    )
    return df

def clean_proto_series(ser):
    s = ser.fillna("").astype(str).str.strip()
    s = s.str.replace(r"\.0$", "", regex=True)
    s = s.str.replace(",", "", regex=True)
    s = s.str.replace(r"\s+", "", regex=True)
    return s

# --- Ler Excel principal ---
df_main = pd.read_excel("/content/Banco de Dados - Novo OuvidorSUS.xlsx")
df_main = padronizar_colunas(df_main)
df_main.rename(columns={"NUMERO_MANIFESTACAO":"PROTOCOLO"}, inplace=True)

# Padronizar protocolo e datas
df_main["PROTOCOLO"] = clean_proto_series(df_main["PROTOCOLO"])
df_main["DATA_MANIFESTACAO"]   = pd.to_datetime(df_main["DATA_MANIFESTACAO"], errors="coerce")
df_main["DATA_ACOMPANHAMENTO"] = pd.to_datetime(df_main["DATA_ACOMPANHAMENTO"], errors="coerce")

# --- Filtros ---
mask = (
    (df_main["UF_OUVIDORIA_DESTINO"] == "MG") &
    (df_main["ESFERA_DESTINO"] == "ESTADUAL") &
    (df_main["DATA_ACOMPANHAMENTO"].between("2025-01-01", "2025-08-31")) &
    (df_main["STATUS_MANIFESTACAO"].isin(["FECHADA", "ARQUIVADA"])) &
    (~df_main["CLASSIFICACAO_MANIFESTACAO"].isin(["DENÃšNCIA", "COMUNICAÃ‡ÃƒO DE IRREGULARIDADE"]))
)

DB_1 = df_main.loc[mask, ["PROTOCOLO", "DATA_MANIFESTACAO"]].copy()
DB_1.rename(columns={"DATA_MANIFESTACAO":"DT_INICIO"}, inplace=True)

# --- Exibir amostra ---
print("ðŸ”¹ DB_1 (amostra):")
display(DB_1.head())

# --- Quadro-resumo ---
total_bruto = df_main.shape[0]
cond_mg = (df_main["UF_OUVIDORIA_DESTINO"] == "MG").sum()
cond_estadual = (df_main["ESFERA_DESTINO"] == "ESTADUAL").sum()
cond_status = df_main["STATUS_MANIFESTACAO"].isin(["FECHADA", "ARQUIVADA"]).sum()
cond_data = df_main["DATA_ACOMPANHAMENTO"].between("2025-01-01", "2025-08-31").sum()
remov_denuncia = (df_main["CLASSIFICACAO_MANIFESTACAO"] == "DENÃšNCIA").sum()
remov_irregularidade = (df_main["CLASSIFICACAO_MANIFESTACAO"] == "COMUNICAÃ‡ÃƒO DE IRREGULARIDADE").sum()
total_final = DB_1.shape[0]

resumo = pd.DataFrame({
    "Etapa": [
        "Total bruto",
        "Filtro UF = MG",
        "Filtro Esfera = ESTADUAL",
        "Filtro Status = FECHADA ou ARQUIVADA",
        "Filtro Data 2025-01-01 a 2025-08-31",
        "Removidos DENÃšNCIA",
        "Removidos COMUNICAÃ‡ÃƒO DE IRREGULARIDADE",
        "Total final DB_1"
    ],
    "Quantidade": [
        total_bruto,
        cond_mg,
        cond_estadual,
        cond_status,
        cond_data,
        remov_denuncia,
        remov_irregularidade,
        total_final
    ]
})

print("\nðŸ“Š Quadro-Resumo dos Filtros:")
display(resumo)

# --- Salvar ---
DB_1.to_excel("/content/DB_1.xlsx", index=False)